diff --git a/spec/compile-cache-spec.js b/spec/compile-cache-spec.js
index 127ef6a26..16b191207 100644
--- a/spec/compile-cache-spec.js
+++ b/spec/compile-cache-spec.js
@@ -107,7 +107,7 @@ describe('CompileCache', function () {
       waits(1)
       return runs(function () {
         error = new Error('Oops again')
-        expect(error.stack).toContain('compile-cache-spec.coffee')
+        expect(error.stack).toContain('compile-cache-spec.js')
         return expect(Array.isArray(error.getRawStack())).toBe(true)
       })
     })
@@ -119,7 +119,7 @@ describe('CompileCache', function () {
       Error.prepareStackTrace = originalPrepareStackTrace

       const error = new Error('Oops')
-      expect(error.stack).toContain('compile-cache-spec.coffee')
+      expect(error.stack).toContain('compile-cache-spec.js')
       return expect(Array.isArray(error.getRawStack())).toBe(true)
     })

@@ -132,7 +132,7 @@ describe('CompileCache', function () {
       }

       const error = new Error('Oops')
-      expect(error.stack).toContain('compile-cache-spec.coffee')
+      expect(error.stack).toContain('compile-cache-spec.js')
       expect(error.foo).toBe('bar')
       return expect(Array.isArray(error.getRawStack())).toBe(true)
     })
diff --git a/spec/config-spec.js b/spec/config-spec.js
index 6c3592573..01d46c057 100644
--- a/spec/config-spec.js
+++ b/spec/config-spec.js
@@ -1310,7 +1310,7 @@ foo:
             expect(fs.existsSync(atom.config.configDirPath)).toBeTruthy()
             expect(fs.existsSync(path.join(atom.config.configDirPath, 'packages'))).toBeTruthy()
             expect(fs.isFileSync(path.join(atom.config.configDirPath, 'snippets.cson'))).toBeTruthy()
-            expect(fs.isFileSync(path.join(atom.config.configDirPath, 'init.coffee'))).toBeTruthy()
+            expect(fs.isFileSync(path.join(atom.config.configDirPath, 'init.js'))).toBeTruthy()
             return expect(fs.isFileSync(path.join(atom.config.configDirPath, 'styles.less'))).toBeTruthy()
           })
         })
diff --git a/spec/integration/helpers/start-atom.js b/spec/integration/helpers/start-atom.js
index 5b17dc9eb..2ace0d052 100644
--- a/spec/integration/helpers/start-atom.js
+++ b/spec/integration/helpers/start-atom.js
@@ -105,7 +105,12 @@ const buildAtomClient = function (args, env) {
         .windowHandles(cb)
     }).addCommand('waitForPaneItemCount', function (count, timeout, cb) {
       return this.waitUntil(function () {
-        return this.execute(() => __guard__(atom.workspace != null ? atom.workspace.getActivePane() : undefined, x => x.getItems().length))
+        return this.execute(() => {
+          function __guard__ (value, transform) {
+            return (typeof value !== 'undefined' && value !== null) ? transform(value) : undefined
+          }
+          return __guard__(atom.workspace != null ? atom.workspace.getActivePane() : undefined, x => x.getItems().length)
+        })
           .then(({value}) => value === count)
       }
       , timeout)
diff --git a/static/index.html b/static/index.html
index 39c7d80c1..8d2c85de4 100644
--- a/static/index.html
+++ b/static/index.html
@@ -1,7 +1,7 @@
 <!DOCTYPE html>
 <html>
 <head>
-  <meta http-equiv="Content-Security-Policy" content="default-src *; img-src blob: data: *; script-src 'self'; style-src 'self' 'unsafe-inline'; media-src blob: data: mediastream: *;">
+  <meta http-equiv="Content-Security-Policy" content="default-src *; img-src blob: data: *; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src blob: data: mediastream: *;">
   <script src="index.js"></script>
 </head>
 <body tabindex="-1">
